#! /usr/bin/env bash

# Entrypoint to create a user, and run command as that user. This allows us
# to pass BUILD_UID and BUILD_GID environment variables at container run-time
# to not clobber the permissions and ownership of mounted volumes.
# Setting BUILDSERVER_DEBUG to a non-zero value will increase output of the
# entrypoint

# Enable additional logging
if [[ -n $BUILDSERVER_DEBUG ]] ; then
  # Add more info to xtrace: source file, line number, function name
  export PS4='+(${BASH_SOURCE##*/}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'

  # Print command traces before executing command.
  set -o xtrace
fi

cat /etc/motd

USERNAME="vamp"
USERHOME="/home/${USERNAME}"

# Redirect STDERR to STDOUT and either execute as root or specified user
run() {
  exec 2>&1

  if [[ -z $BUILD_UID ]] ; then
    exec "$@"
  else
    exec su "$USERNAME" --command="$*"
  fi
}

if [[ -n $BUILD_UID ]] ; then
  [[ -z $BUILD_GID ]] && BUILD_GID="$BUILD_UID"

  echo "Adding user inside docker container:" \
       "uid=${BUILD_UID}($USERNAME) gid=${BUILD_GID}($USERNAME)"

  groupadd --gid "$BUILD_GID" "$USERNAME" \
    || { echo "Failed to add group, exiting!"; exit 1; }

  useradd --uid "$BUILD_UID" --gid "$BUILD_GID" --home-dir "$USERHOME" "$USERNAME" \
    || { echo "Failed to add user, exiting!"; exit 1; }

  chown -R "${BUILD_UID}:${BUILD_GID}" "$USERHOME"
  chmod -R 0755 "$USERHOME"
fi


case "$1" in
  "push")
    set -- "${@:2}"
    run /usr/local/bin/push "$@"
    ;;
  "pull")
    set -- "${@:2}"
    run /usr/local/bin/pull "$@"
    ;;
  *)
    run "$@"
    ;;
esac
